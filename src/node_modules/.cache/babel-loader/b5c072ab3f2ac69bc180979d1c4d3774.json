{"ast":null,"code":"import { useState } from \"react\";\nexport default function useVisualMode(initial) {\n  const [history, setHistory] = useState([initial]);\n\n  function transition(newMode, replace = false) {\n    if (replace) {\n      setHistory(history => history.slice(0, history.length - 1).concat(newMode));\n    } else {\n      setHistory(history => [...history, newMode]);\n    }\n\n    ;\n    localStorage.setItem('mode', newMode);\n  }\n\n  ;\n\n  function back() {\n    if (history.length > 1) {\n      setHistory(history => history.slice(0, history.length - 1));\n    }\n  }\n\n  return {\n    mode: history[history.length - 1],\n    transition,\n    back\n  };\n}","map":{"version":3,"sources":["/Users/katherineszelag/resume_site/resume/src/hooks/useVisualMode.js"],"names":["useState","useVisualMode","initial","history","setHistory","transition","newMode","replace","slice","length","concat","localStorage","setItem","back","mode"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AAC7C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAACE,OAAD,CAAD,CAAtC;;AAEA,WAASG,UAAT,CAAoBC,OAApB,EAA6BC,OAAO,GAAG,KAAvC,EAA8C;AAC5C,QAAIA,OAAJ,EAAa;AACXH,MAAAA,UAAU,CAACD,OAAO,IAChBA,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiBL,OAAO,CAACM,MAAR,GAAiB,CAAlC,EAAqCC,MAArC,CAA4CJ,OAA5C,CADQ,CAAV;AAGD,KAJD,MAIO;AACLF,MAAAA,UAAU,CAACD,OAAO,IAAI,CAAC,GAAGA,OAAJ,EAAaG,OAAb,CAAZ,CAAV;AACD;;AAAA;AACDK,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BN,OAA7B;AACD;;AAAA;;AAED,WAASO,IAAT,GAAgB;AACd,QAAIV,OAAO,CAACM,MAAR,GAAiB,CAArB,EAAwB;AACtBL,MAAAA,UAAU,CAACD,OAAO,IAAIA,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiBL,OAAO,CAACM,MAAR,GAAiB,CAAlC,CAAZ,CAAV;AACD;AACF;;AAED,SAAO;AAAEK,IAAAA,IAAI,EAAEX,OAAO,CAACA,OAAO,CAACM,MAAR,GAAiB,CAAlB,CAAf;AAAqCJ,IAAAA,UAArC;AAAiDQ,IAAAA;AAAjD,GAAP;AACD","sourcesContent":["import { useState } from \"react\";\n\nexport default function useVisualMode(initial) {\n  const [history, setHistory] = useState([initial]);\n\n  function transition(newMode, replace = false) {\n    if (replace) {\n      setHistory(history =>\n        history.slice(0, history.length - 1).concat(newMode)\n      );\n    } else {\n      setHistory(history => [...history, newMode])\n    };\n    localStorage.setItem('mode', newMode);\n  };\n\n  function back() {\n    if (history.length > 1) {\n      setHistory(history => history.slice(0, history.length - 1));\n    }\n  }\n\n  return { mode: history[history.length - 1], transition, back };\n}\n"]},"metadata":{},"sourceType":"module"}